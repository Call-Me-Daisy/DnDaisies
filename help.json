{
	"categories" : {
		"type" : "null",
		"msg" : [
			"Lists just for convenience; you shouldn't specify the category of the thing you want help with.\n"
		]
	},
	"keywords" : {
		"type" : "category",
		"msg" : [
			"Things you need to know about before you can properly use this bot.\n"
		]
	},
	"arenas" : {
		"type" : "keywords",
		"msg" : [
			"The battlefield that is currently being tracked.",
			"While very customisable with images and **tokens**, it is at heart a grid - going up to 52x78 in size.",
			"This will *always* contain a co-ordinate reference border to help with positioning."
		]
	},
	"maps" : {
		"type" : "keywords",
		"msg" : [
			"A top-down view of the current **arena**."
		]
	},
	"coordinate" : {
		"type" : "keywords",
		"msg" : [
			"A way to specify a certain position within the **arena**.",
			"Specified using the **arena**'s reference border (ie. A4) or with numbers directly (ie. 1-4).",
			"Although the **map** is 2D, the height off the ground can also be tracked (ie. A4-3 or 1-4-3).",
			"Note: Height is optional, as (if not specified) a height of 0 is assumed"
		]
	},
	"range" : {
		"type" : "keywords",
		"msg" : [
			"A way to specify a whole area within the **arena**.",
			"Specified with the top-left and bottom-right **coordinates** and a colon (ie. A4:G7).",
			"Note: Any acceptable **coordinate** variation is also fine for use here"
		]
	},
	"token" : {
		"type" : "keywords",
		"msg" : [
			"A catch-all term for an individual unit that can exist in the **arena**.",
			"Contains position, size, and whether they are invisible and/or removed from the arena.",
			"Note: You must specify the **name** *and* **index** (ie. Zombie 1) of a token, unless there's only one"
		]
	},
	"group" : {
		"type" : "keywords",
		"msg" : [
			"A collection of similar **token**s.",
			"Contains a list of **tokens** and the **styles** used to draw them.",
			"There are some preset **style** combinations, but you can mix and match to create whatever you need.",
			"Note: All **tokens** exist within a group, as the group is what actually draws it onto the **map**."
		]
	},
	"name" : {
		"type" : "keywords",
		"msg" : [
			"The name the **arena** uses to refer to a certain **group**.",
			"Note: Two **group** names cannot differ by capitalisation alone, as that is normalised by the **arena**"
		]
	},
	"code" : {
		"type" : "keywords",
		"msg" : [
			"How members of a **group** are identified on the **map**",
			"Note: Currently the first and last characters of their **name**, so plan **names** accordingly!"
		]
	},
	"index" : {
		"type" : "keywords",
		"msg" : [
			"Needed to specify a particular **token** within a **group** (alongside its **name**).",
			"Note: Index starts at 0, and 0 is assumed for a **group** with only one **token**",
			"Note: A **token**'s index is displayed alongside its **code** on the **map**"
		]
	},
	"arguments" : {
		"type" : "keywords",
		"msg" : [
			"Additional information to pass to **commands**.",
			"Arguments marked like {so} are optional, whereas [these] are mandatory for it to work as intended.",
			"Note: The order to pass arguments to each **command** is denoted numerically in its explain text",
			"Note: Some arguments are denoted non-numerically (ie. {REPLY}), which are hopefully self-explanatory"
		]
	},
	"csv" : {
		"type" : "keywords",
		"msg" : [
			"'Comma-Separated Variables' (ie. A1,B2,C3).",
			"Note: Variables should *only* be separated by commas - especially important that there are no spaces"
		]
	},
	"team" : {
		"type" : "keywords",
		"msg" : [
			"Colour-code your **tokens** to more easily get the lay of the **arena**.",
			"There are presets, but you can specify a colour directly with HEX#rgba (ie. #f00f = solid red).",
			"PRESETS: party = green, allies = blue, enemies = red, neutrals = brown, objects = grey, walls = black"
		]
	},
	"coord" : {
		"type" : "alias",
		"msg" : "coordinate"
	},
	"args" : {
		"type" : "alias",
		"msg" : "arguments"
	},
	"commands" : {
		"type" : "category",
		"msg" : [
			"Instructions you can give to the bot.\n"
		]
	},
	"help" : {
		"type" : "commands",
		"msg" : [
			"This! Why did you ask how this works? 0.o",
			"Argsuments:",
			"{1} What category/command/keyword you need explained.",
			"^Default: Shows a list of **categories**."
		]
	},
	"image" : {
		"type" : "commands",
		"msg" : [
			"Make the bot adopt/create a thread within which to look for images whenever it draws a **map**.",
			"{REPLY} Message with child thread from which to read images.",
			"^Default: A new, empty, thread will be created."
		]
	},
	"display" : {
		"type" : "commands",
		"msg" : [
			"Display this channel's map.",
			"Note: Most **commands** will automatically call this at the end of the queue"
		]
	},
	"nomap" : {
		"type" : "commands",
		"msg" : [
			"Ignore other **commands*' attempts to display the map.",
			"Note: This only affects commands *after* this in the queue; call at the start for guaranteed effect"
		]
	},
	"new" : {
		"type" : "commands",
		"msg" : [
			"Create a new **arena**! Generally should be the first command given.",
			"[1] **Coord** of the **arena**'s bottom-right corner (top-left is *always* A1)."
		]
	},
	"guide" : {
		"type" : "commands",
		"msg" : [
			"Draw a temporary, transparent, shape onto the map; see **guides** for options & more detail.",
			"[1] Shape to draw",
			"[2...] **Arguments** for that shape"
		]
	},
	"list" : {
		"type" : "commands",
		"msg" : [
			"Display a breakdown of a/all **team(s)**, and the display & code names of each **group** within them.",
			"{1} The team to break down.",
			"^Default: Just lists all teams together."
		]
	},
	"separation" : {
		"type" : "commands",
		"msg" : [
			"Cacluate the distance between two **coords** or **tokens** (or a combination).",
			"[1] First coord or token.",
			"[2] Second coord or token."
		]
	},
	"instructions" : {
		"type" : "commands",
		"msg" : [
			"Make the bot print out a list of commands to get back to the current **arena**.",
			"Note: Mainly useful if you have two arenas you need to flick between",
			"*No Arguments*"
		]
	},
	"movegroup" : {
		"type" : "commands",
		"msg" : [
			"Specify **coords** to move (non-**removed**) members of a **group**, in order of **index**.",
			"[1] **Name** of **group** to move.",
			"[2] **csv** of **coords** to move **tokens** to.",
			"{3} (true/false) = Set moved **tokens** to (visible/hidden).",
			"^Default: **Token** visibility is unchanged."
		]
	},
	"hidegroup" : {
		"type" : "commands",
		"msg" : [
			"Change visibility of an entire **group**.",
			"[1] **Name** of **group** to edit.",
			"{2} (true/false/!) = Set visibility of **tokens** to (true/false/the opposite of its current state).",
			"^Default: Assumes !."
		]
	},
	"removegroup" : {
		"type" : "commands",
		"msg" : [
			"Delete an entire **group** from the **arena**.",
			"[1] **Name** of **group** to remove."
		]
	},
	"resizegroup" : {
		"type" : "commands",
		"msg" : [
			"Change the dimensions of every **token** in a **group**.",
			"[1] **Name** of **group** to resize.",
			"[2] **Coord** of new dimensions (ie. B4 or 2-4 = 2x4 inclusive).",
			"{3} Current tokens will be scaled out from the: top-left/center-center/bottom-right/etc",
			"^Default: Current tokens will not be scaled.",
			"Note: [2] can be a **range**; the position of it will just be ignored"
		]
	},
	"newtoken" : {
		"type" : "commands",
		"msg" : [
			"Create new **token**(s) at given **coord**(s).",
			"[1] **Name** of **group** to add to.",
			"[2] **CSV** of **Coord**/**Range** of new **token**(s).",
			"{3} (true/false) = The new **token**(s) should be (visible/hidden).",
			"^Default: Assumes true.",
			"Note: Each token created at a **coord** will copy the dimensions of the **token** at **index** 0"
		]
	},
	"move" : {
		"type" : "commands",
		"msg" : [
			"Move, and optionally resize, **token**(s) within a **group**.",
			"[1] **Name** of **group** containing **tokens** to be moved.",
			"[2] **CSV** of **index** representing all **tokens** to edit.",
			"[3] **CSV** of **ranges** to move & resize them to - matching the order of [2].",
			"{4} (true/false/!) = Set moved **tokens** to (visible/hidden/the opposite of the current state).",
			"^Default: **Token** visibilty is unchanged.",
			"Note: Any or all entries of [2] can be **coords** to cause the token to be moved *without* resizing"
		]
	},
	"hide" : {
		"type" : "commands",
		"msg" : [
			"Change visibilty of **token**(s) within a **group**.",
			"[1] **Name** of **group** containing **tokens** to be hidden/revealed.",
			"[2] **CSV** of **index** representing all **tokens** to edit.",
			"{3} (true/false/!) = Set visibility of **token**(s) to (true/false/the opposite of the current state).",
			"^Default: Assumes !.",
			"Note: [2] can be omitted if there is only one **token** in the **group**"
		]
	},
	"remove" : {
		"type" : "commands",
		"msg" : [
			"Change removed status of **token**(s) within a **group**.",
			"[1] **Name** of **group** containing **tokens** to be removed/replaced.",
			"[2] **CSV** of **index** representing all **tokens** to edit.",
			"{3} (true/false/!) = **Token**(s) should be (removed/reinstated/the opposite of the current status).",
			"^Default: Assumes true.",
			"Note: [2] can be omitted if there is only one **token** in the **group**"
		]
	},
	"editlight" : {
		"type" : "commands",
		"msg" : [
			"Alter every **token** in an existing **group** to emit/absorb light around them.",
			"[1] **Name** of **group** to be altered.",
			"[2] Radius out to which **tokens** should emit/absorb light.",
			"[3] Opacity of darkness to leave in the area (0 - 1 = no darkness - opaque).",
			"{4} Decimal percentage to offset before light/darkness begins to fade to ambient.",
			"^Default: Assumes 0.5",
			"Note: If no arguments are provided, will toggle light functionality on/off for this group",
			"Note: ^ Functionality will only be toggled on this way if radius and opacity have previously been set"
		]
	},
	"ambient" : {
		"type" : "commands",
		"msg" : [
			"Alter the opacity and/or colour of the ambient light in the **arena**...",
			"1. Only change opacity: [1] Opacity",
			"2. Only change colour: [1] Red, [2] Green, [3] Blue OR [1] **CSV** of RGB values",
			"3. Change both: [1] Red, [2] Green, [3] Blue, [4] Opacity OR [1] **CSV** of RGBA values",
			"Note: Opacity, or 'Alpha' value is measured 0 (bright light) to 1 (completely opaque)",
			"Note: Colour, or 'RGB' values are measured 0 to 255 (higher numbers mean more of that colour present)"
		]
	},
	"explain" : {
		"type" : "alias",
		"msg" : "help"
	},
	"thread" : {
		"type" : "alias",
		"msg" : "image"
	},
	"map" : {
		"type" : "alias",
		"msg" : "display"
	},
	"hidden" : {
		"type" : "alias",
		"msg" : "nomap"
	},
	"arena" : {
		"type" : "alias",
		"msg" : "new"
	},
	"preview" : {
		"type" : "alias",
		"msg" : "guide"
	},
	"tokens" : {
		"type" : "alias",
		"msg" : "list"
	},
	"distance" : {
		"type" : "alias",
		"msg" : "separation"
	},
	"collapse" : {
		"type" : "alias",
		"msg" : "instructions"
	},
	"revealgroup" : {
		"type" : "alias",
		"msg" : "hidegroup"
	},
	"copy" : {
		"type" : "alias",
		"msg" : "newtoken"
	},
	"reveal" : {
		"type" : "alias",
		"msg" : "hide"
	},
	"editdark" : {
		"type" : "alias",
		"msg" : "editlight"
	},
	"groups" : {
		"type" : "category",
		"msg" : [
			"A subset of **commands** focused on creating new **groups**.",
			"**Arguments** of preset **groups** are all:",
			"[1] **Team** of **group**.",
			"[2] **Name** of **group**.",
			"{3} **CSV** of **ranges** to also create tokens in; the first **range** sets the default dimensions.",
			"{4} (true/false) = Created tokens should be (visible/hidden).",
			"Default: {3} No **tokens** will be added to the **arena**, and default dimensions are set to 1-1",
			"Default: {4} Assumes true",
			"Note: Any coords in {3} will have their dimensions set to the default for the group\n"
		]
	},
	"static" : {
		"type" : "groups",
		"msg" : [
			"An unobtrusive section of background - ideal for large areas of terrain.",
			"LAYER: 1",
			"TOKEN: GRID",
			"CELL: RECT",
			"NAME: NONE"
		]
	},
	"object" : {
		"type" : "groups",
		"msg" : [
			"A marginally obtrusive section of background - ideal for relatively small solid objects.",
			"LAYER: 2",
			"TOKEN: IMAGE",
			"CELL: RECT",
			"NAME: NONE"
		]
	},
	"swarm" : {
		"type" : "groups",
		"msg" : [
			"A large group of indistinguisable tokens pushed to the background to be less obtrustive.",
			"LAYER: 3",
			"TOKEN: GRID",
			"CELL: ELLIPSE",
			"NAME: CORNER"
		]
	},
	"area" : {
		"type" : "groups",
		"msg" : [
			"An unobtrusive section of midground - ideal for retangular AoE spells/effects.",
			"LAYER: 4",
			"TOKEN: GRID",
			"CELL: RECT",
			"NAME: MIDDLE"
		]
	},
	"concentric" : {
		"type" : "groups",
		"msg" : [
			"A double-layered section of midground - ideal for circular AoE spells/effects.",
			"LAYER: 4",
			"TOKEN: CONCENTRIC",
			"CELL: ELLIPSE",
			"NAME: MIDDLE"
		]
	},
	"creature" : {
		"type" : "groups",
		"msg" : [
			"Dynamic tokens that should be individual even among similar tokens (ie. to track HP).",
			"LAYER: -1",
			"TOKEN: IMAGE",
			"CELL: ELLIPSE",
			"NAME: PARTIAL"
		]
	},
	"custom" : {
		"type" : "groups",
		"msg" : [
			"Mix and match **styles** to tailor your **tokens**' appearances.",
			"[1] LAYER",
			"[2] TOKEN",
			"[3] CELL",
			"{4} NAME",
			"^Default: Assumes NONE",
			"Followed by the **arguments** of the preset **groups**.",
			"Note: See **styles** for a comprehensive list"
		]
	},
	"light" : {
		"type": "groups",
		"msg" : [
			"A **group** that is invisible except for the light it emits - ideal for small atmospheric lighting.",
			"Most of the preset **arguments** are unimportant for these **groups**, so they are called as follows:",
			"[1] **Name** of **group**.",
			"[2] Radius of the light/dark area surrounding this **group**'s **tokens**.",
			"[3] Opacity of darkness in the area surrounding this **group**'s **tokens**.",
			"{4} **CSV** of **ranges** in which to place new **tokens**.",
			"Note: The light/dark areas are centered at the center of the **tokens**, so dimensions still matter",
			"Note: To make a visible group that emits/absorbs, see the **editlight** **command**"
		]
	},
	"rectangular" : {
		"type" : "alias",
		"msg" : "area"
	},
	"circular" : {
		"type" : "alias",
		"msg" : "concentric"
	},
	"tailor" : {
		"type" : "alias",
		"msg" : "custom"
	},
	"dark" : {
		"type" : "alias",
		"msg" : "light"
	},
	"guides" : {
		"type" : "category",
		"msg" : [
			"A subset of **commands** focused on creating visual previews of movement/large effects/etc.",
			"Note: These **args** lists start at [2], as [1] was the shape to be drawn\n"
		]
	},
	"box" : {
		"type" : "guides",
		"msg" : [
			"Outline a **range**(s) of cells.",
			"[2] **CSV** of **Ranges** to be outlined.",
			"Note: If the first entry in [2] is a **coord**, the dimensions will be set to 1-1",
			"Note: The dimension of any **coords** in [2] will be set to that of the first entry"
		]
	},
	"line" : {
		"type" : "guides",
		"msg" : [
			"Draw a straight line connecting two cells or tokens.",
			"[2] **Coord**/**Token** to start from.",
			"[3] **Coord**/**Token** to end at."
		]
	},
	"ellipse" : {
		"type" : "guides",
		"msg" : [
			"Outline an ellipse of given radii around a **coord** or **token**.",
			"[2] **Coord**/**Token** at center.",
			"[3] **Coord** of radii of ellipse (ie. 1-2 makes a small, wide ellipse).",
			"Note: [3] can be a single number for a circle."
		]
	},
	"equidistant" : {
		"type" : "guides",
		"msg" : [
			"Connect two points with a line, and outline a circle to show equidistant points.",
			"[2] **Coord**/**Token** at center of circle.",
			"[3] **Coord**/**Token** to end line at OR Radius of circle."
		]
	},
	"cone" : {
		"type" : "guides",
		"msg" : [
			"Draw a cone originating of given size and angle from a **coord** of origin.",
			"[2] **Coord**/**Token** to use as origin.",
			"[3] **Coord** of diameters for the cone (ie. 4-6 makes a 6-wide cone 4 cells from the origin).",
			"{4} Bearing (clockwise angle from North) of centerline of cone in degrees.",
			"Note: [3] can be a single number for a standard D&D cone (as wide as it is far away)"
		]
	},
	"spider" : {
		"type" : "guides",
		"msg" : [
			"Draw lines connecting a single point to a list of **coords** or each visible **token** in a **group**.",
			"[2] **Coord**/**Token** to use as origin.",
			"[3] **CSV** of **coords** or **name** of **group** to connect draw to."
		]
	},
	"rect" : {
		"type" : "alias",
		"msg" : "box"
	},
	"square" : {
		"type" : "alias",
		"msg" : "rect"
	},
	"straight" : {
		"type" : "alias",
		"msg" : "line"
	},
	"circle" : {
		"type" : "alias",
		"msg" : "ellipse"
	},
	"sundail" : {
		"type" : "alias",
		"msg" : "equidistant"
	},
	"triangle" : {
		"type" : "alias",
		"msg" : "cone"
	},
	"multiline" : {
		"type" : "alias",
		"msg" : "spider"
	},
	"styles": {
		"type" : "category",
		"msg" : [
			"__This section is only important if you want to make *custom* **tokens**.__",
			"The options for how a **group** is drawn onto the **map**.",
			"There are four customisations for a **group**: LAYER, TOKEN, CELL, NAME, and LIGHT.",
			"Tokens are drawn in order of LAYER (low to high, though -1 is *always* drawn last so it's at the top).",
			"TOKEN styles determine the major features of the token's appearance",
			"CELL styles determine the pattern used *by* the TOKEN style for each distinct shape.",
			"NAME styles determine where and how much of a **token**'s **name** is displayed on the map.",
			"Note: You need not include the qualifier (_main) when making your tokens; that's just for clarity here"
		]
	},
	"none_general" : {
		"type" : "styles",
		"msg" : [
			"Does nothing; can be used in place of any other style (though most commonly LIGHT and NAME)."
		]
	},
	"rect_cell" : {
		"type" : "styles",
		"msg" : [
			"A filled rectangle that entirely covers the bounds it was draw with."
		]
	},
	"ellipse_cell" : {
		"type" : "styles",
		"msg" : [
			"A filled ellipse entirely contained within the bounds it was drawn with."
		]
	},
	"clear_cell" : {
		"type" : "styles",
		"msg" : [
			"Erase everything that was previously painted within the bounds of this rectangle."
		]
	},
	"fill_token" : {
		"type" : "styles",
		"msg" : [
			"One CELL, the size and position of the **token** being painted."
		]
	},
	"grid_token" : {
		"type" : "styles",
		"msg" : [
			"Many 1-1 CELLs that together make up the size and position of the **token** being painted."
		]
	},
	"layer_token" : {
		"type" : "styles",
		"msg" : [
			"A **fill_token** in the center of a larger, translucent, copy."
		]
	},
	"image_token" : {
		"type" : "styles",
		"msg" : [
			"Load an image from the **thread** command, and scale it to fill the size and position of the **token**."
		]
	},
	"middle_name" : {
		"type" : "styles",
		"msg" : [
			"Print the **token**'s full **code** in its center."
		]
	},
	"corner_name" : {
		"type" : "styles",
		"msg" : [
			"Print the **token**'s full **code** in each of its corners."
		]
	},
	"partial_name" : {
		"type" : "styles",
		"msg" : [
			"Print only the **token**'s **index** in its center."
		]
	}
}
